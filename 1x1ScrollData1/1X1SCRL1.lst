mads 2.0.6 build 58 (28 Jan 17)
     1 				; "1x1 scroll, example 1", Atari XL/XE Intro
     2 				;
     3 				; what it does:
     4 				; - 1x1-character scroll in ANTIC mode 2
     5 				; - supports up to 128 unique 1x1-fonts
     6 				; - fonts come from several separate input font sets
     7 				; - length of scroll is limited by available memory only
     8 				;
     9 				; code by tr1x / Agenda
    10 				; requirements: original Atari XL/XE 64KB PAL
    11 				; version: 1.0
    12 				; date: 2020-05-24
    13
    14 = 4000			video	equ $4000
    15
    16 = 0012			rtclok	equ $0012
    17 = 00C0			txtptr	equ $00c0
    18 = 0200			vdslst	equ $0200
    19 = 0230			sdlstl	equ $0230
    20 = 02F4			chbas	equ $02f4
    21 = D404			hscrol	equ $d404
    22 = D40A			wsync	equ $d40a
    23 = D40B			vcount	equ $d40b
    24
    25 					org $600
    26
    27 					; set display list
    28 FFFF> 0600-0663> A9 5B		lda #<dlist
    29 0602 8D 30 02			sta sdlstl
    30 0605 A9 06			lda #>dlist
    31 0607 8D 31 02			sta sdlstl+1
    32
    33 					; initialize text pointer to the first character of scroll text
    34 060A A9 00			lda <text
    35 060C 85 C0			sta txtptr
    36 060E A9 09			lda >text
    37 0610 85 C1			sta txtptr+1
    38
    39 					; set character set
    40 0612 A9 70			lda #>fonts
    41 0614 8D F4 02			sta chbas
    42
    43 0617 A2 03			ldx #$03
    44 0619 8E 04 D4		main	stx hscrol
    45
    46 					; delay
    47 061C A5 14			lda rtclok+2
    48 061E C5 14		delay	cmp rtclok+2
    49 0620 F0 FC			beq delay
    50
    51 0622 CA				dex
    52 0623 10 F4			bpl main
    53 0625 A2 03			ldx #$03
    54 0627 8E 04 D4			stx hscrol
    55
    56 					; move data in viewport one character left
    57 062A A0 00			ldy #$00
    58 062C B9 01 40		move	lda video+1,y
    59 062F 99 00 40			sta video,y
    60 0632 C8				iny
    61 0633 C0 2B			cpy #$2b
    62 0635 D0 F5			bne move
    63
    64 					; put new character of scroll text
    65 0637 A0 00			ldy #$00
    66 0639 B1 C0			lda (txtptr),y
    67 063B 8D 2B 40			sta video+$2b
    68
    69 					; point to the next character of scroll text
    70 063E E6 C0			inc txtptr
    71 0640 D0 02			bne skip
    72 0642 E6 C1			inc txtptr+1
    73 0644			skip
    74
    75 					; check if it is the end of scroll text
    76 0644 A5 C0			lda txtptr
    77 0646 C9 BE			cmp #<textend
    78 0648 D0 CF			bne main
    79 064A A5 C1			lda txtptr+1
    80 064C C9 09			cmp #>textend
    81 064E D0 C9			bne main
    82
    83 					; initialize text pointer to the first character of scroll text
    84 0650 A9 00			lda <text
    85 0652 85 C0			sta txtptr
    86 0654 A9 09			lda >text
    87 0656 85 C1			sta txtptr+1
    88
    89 0658 4C 19 06			jmp main
    90
    91
    92 					; display list
    93 065B 70 70 70		dlist	.byte $70, $70, $70		; 24 blank lines
    94 065E 52				.byte $02 | $40 | $10		; mode 2 + LMS + HSCROLL
    95 065F 00 40			.byte $00, $40			; screen address
    96 0661 41				.byte $41			; jump and wait for VBLANK
    97 0662 5B 06			.byte <dlist, >dlist		; jump to this address
    98
    99
   100 					; data comes from "1x1ScrollData1.json"
   101 0664				icl '1X1DTA1.ASM'
     1 				; "Scroll Packer" v0.1, 2020-07-16 22:28:42, "1x1ScrollData1\1x1ScrollData1.json"
     2
     3 0664				org $900
     4
     5 				; scroll text, length: 190, unique characters: 122
     6 0900-09BD> 00 01 02 03 + text	.byte $00, $01, $02, $03, $04, $05, $06, $03	;  Hey guy
     7 0908 07 08 04 09 0A 0B + 	.byte $07, $08, $04, $09, $0a, $0b, $07, $04	; s! It's 
     8 0910 0A 0C 02 04 0D 02 + 	.byte $0a, $0c, $02, $04, $0d, $02, $0e, $0f	; the demo
     9 0918 04 0F 10 04 11 12 + 	.byte $04, $0f, $10, $04, $11, $12, $13, $14	;  of "SCR
    10 0920 15 16 16 00 17 18 + 	.byte $15, $16, $16, $00, $17, $18, $13, $19	; OLL PACK
    11 0928 1A 14 11 1B 1B 1B + 	.byte $1a, $14, $11, $1b, $1b, $1b, $00, $1c	; ER"... G
    12 0930 1D 1E 1F 1D 20 21 + 	.byte $1d, $1e, $1f, $1d, $20, $21, $22, $23	; żegżółka
    13 0938 00 1C 24 1A 1C 24 + 	.byte $00, $1c, $24, $1a, $1c, $24, $25, $26	;  GŻEGŻÓŁ
    14 0940 19 18 00 27 28 02 + 	.byte $19, $18, $00, $27, $28, $02, $05, $28	; KA Gżegż
    15 0948 29 2A 2B 2C 2D 27 + 	.byte $29, $2a, $2b, $2c, $2d, $27, $2e, $2f	; ółka GŻE
    16 0950 27 2E 30 31 32 33 + 	.byte $27, $2e, $30, $31, $32, $33, $2d, $2d	; GŻÓŁKA  
    17 0958 2D 34 1E 00 35 00 + 	.byte $2d, $34, $1e, $00, $35, $00, $36, $37	;  We ♥ yo
    18 0960 38 39 00 00 00 00 + 	.byte $38, $39, $00, $00, $00, $00, $3a, $3b	; u!    01
    19 0968 3C 3D 3E 3F 40 41 + 	.byte $3c, $3d, $3e, $3f, $40, $41, $42, $43	; 23456789
    20 0970 18 44 13 45 1A 46 + 	.byte $18, $44, $13, $45, $1a, $46, $1c, $47	; ABCDEFGH
    21 0978 48 49 19 16 4A 4B + 	.byte $48, $49, $19, $16, $4a, $4b, $15, $17	; IJKLMNOP
    22 0980 4C 14 12 4D 4E 4F + 	.byte $4c, $14, $12, $4d, $4e, $4f, $34, $50	; QRSTUVWX
    23 0988 51 52 23 53 54 55 + 	.byte $51, $52, $23, $53, $54, $55, $1e, $56	; YZabcdef
    24 0990 1F 57 58 59 22 5A + 	.byte $1f, $57, $58, $59, $22, $5a, $5b, $5c	; ghijklmn
    25 0998 37 5D 5E 5F 60 61 + 	.byte $37, $5d, $5e, $5f, $60, $61, $38, $62	; opqrstuv
    26 09A0 63 64 36 65 33 66 + 	.byte $63, $64, $36, $65, $33, $66, $67, $68	; wxyzABCD
    27 09A8 2F 69 27 01 09 6A + 	.byte $2f, $69, $27, $01, $09, $6a, $32, $6b	; EFGHIJKL
    28 09B0 6C 6D 6E 6F 70 71 + 	.byte $6c, $6d, $6e, $6f, $70, $71, $72, $73	; MNOPQRST
    29 09B8 74 75 76 77 78 79		.byte $74, $75, $76, $77, $78, $79	; UVWXYZ
    30 09BE			textend
    31
    32 09BE				org $7000
    33
    34 				; fonts data
    35 7000-73CF> 00 00 00 00 + fonts	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {system} 0_0
    36 7008 00 42 42 7E 42 42 + 	.byte $00, $42, $42, $7e, $42, $42, $42, $00	; "H" {simple} 0_0
    37 7010 00 00 3C 42 7E 40 + 	.byte $00, $00, $3c, $42, $7e, $40, $3c, $00	; "e" {simple} 0_0
    38 7018 00 00 42 42 42 3E + 	.byte $00, $00, $42, $42, $42, $3e, $02, $7c	; "y" {simple} 0_0
    39 7020 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {simple} 0_0
    40 7028 00 00 3E 42 42 3E + 	.byte $00, $00, $3e, $42, $42, $3e, $02, $7c	; "g" {simple} 0_0
    41 7030 00 00 42 42 42 42 + 	.byte $00, $00, $42, $42, $42, $42, $3e, $00	; "u" {simple} 0_0
    42 7038 00 00 3E 40 3C 02 + 	.byte $00, $00, $3e, $40, $3c, $02, $7c, $00	; "s" {simple} 0_0
    43 7040 00 10 10 10 10 00 + 	.byte $00, $10, $10, $10, $10, $00, $10, $00	; "!" {simple} 0_0
    44 7048 00 3E 08 08 08 08 + 	.byte $00, $3e, $08, $08, $08, $08, $3e, $00	; "I" {simple} 0_0
    45 7050 00 10 7C 10 10 10 + 	.byte $00, $10, $7c, $10, $10, $10, $0e, $00	; "t" {simple} 0_0
    46 7058 00 10 10 10 00 00 + 	.byte $00, $10, $10, $10, $00, $00, $00, $00	; "'" {simple} 0_0
    47 7060 00 40 40 7C 42 42 + 	.byte $00, $40, $40, $7c, $42, $42, $42, $00	; "h" {simple} 0_0
    48 7068 00 02 02 3E 42 42 + 	.byte $00, $02, $02, $3e, $42, $42, $3e, $00	; "d" {simple} 0_0
    49 7070 00 00 62 55 49 49 + 	.byte $00, $00, $62, $55, $49, $49, $41, $00	; "m" {simple} 0_0
    50 7078 00 00 3C 42 42 42 + 	.byte $00, $00, $3c, $42, $42, $42, $3c, $00	; "o" {simple} 0_0
    51 7080 00 0E 10 7C 10 10 + 	.byte $00, $0e, $10, $7c, $10, $10, $10, $00	; "f" {simple} 0_0
    52 7088 00 66 66 66 00 00 + 	.byte $00, $66, $66, $66, $00, $00, $00, $00	; """ {system} 0_0
    53 7090 00 3C 60 3C 06 06 + 	.byte $00, $3c, $60, $3c, $06, $06, $3c, $00	; "S" {system} 0_0
    54 7098 00 3C 66 60 60 66 + 	.byte $00, $3c, $66, $60, $60, $66, $3c, $00	; "C" {system} 0_0
    55 70A0 00 7C 66 66 7C 6C + 	.byte $00, $7c, $66, $66, $7c, $6c, $66, $00	; "R" {system} 0_0
    56 70A8 00 3C 66 66 66 66 + 	.byte $00, $3c, $66, $66, $66, $66, $3c, $00	; "O" {system} 0_0
    57 70B0 00 60 60 60 60 60 + 	.byte $00, $60, $60, $60, $60, $60, $7e, $00	; "L" {system} 0_0
    58 70B8 00 7C 66 66 7C 60 + 	.byte $00, $7c, $66, $66, $7c, $60, $60, $00	; "P" {system} 0_0
    59 70C0 00 18 3C 66 66 7E + 	.byte $00, $18, $3c, $66, $66, $7e, $66, $00	; "A" {system} 0_0
    60 70C8 00 66 6C 78 78 6C + 	.byte $00, $66, $6c, $78, $78, $6c, $66, $00	; "K" {system} 0_0
    61 70D0 00 7E 60 7C 60 60 + 	.byte $00, $7e, $60, $7c, $60, $60, $7e, $00	; "E" {system} 0_0
    62 70D8 00 00 00 00 00 18 + 	.byte $00, $00, $00, $00, $00, $18, $18, $00	; "." {system} 0_0
    63 70E0 00 3E 60 60 6E 66 + 	.byte $00, $3e, $60, $60, $6e, $66, $3e, $00	; "G" {system} 0_0
    64 70E8 18 00 7E 0C 18 30 + 	.byte $18, $00, $7e, $0c, $18, $30, $7e, $00	; "ż" {system Polish} 0_0
    65 70F0 00 00 3C 66 7E 60 + 	.byte $00, $00, $3c, $66, $7e, $60, $3c, $00	; "e" {system} 0_0
    66 70F8 00 00 3E 66 66 3E + 	.byte $00, $00, $3e, $66, $66, $3e, $06, $7c	; "g" {system} 0_0
    67 7100 0C 18 3C 66 66 66 + 	.byte $0c, $18, $3c, $66, $66, $66, $3c, $00	; "ó" {system Polish} 0_0
    68 7108 00 38 18 1C 38 18 + 	.byte $00, $38, $18, $1c, $38, $18, $3c, $00	; "ł" {system Polish} 0_0
    69 7110 00 60 60 6C 78 6C + 	.byte $00, $60, $60, $6c, $78, $6c, $66, $00	; "k" {system} 0_0
    70 7118 00 00 3C 06 3E 66 + 	.byte $00, $00, $3c, $06, $3e, $66, $3e, $00	; "a" {system} 0_0
    71 7120 00 7E 0C 7E 30 60 + 	.byte $00, $7e, $0c, $7e, $30, $60, $7e, $00	; "Ż" {system Polish} 0_0
    72 7128 18 3C 66 66 66 66 + 	.byte $18, $3c, $66, $66, $66, $66, $3c, $00	; "Ó" {system Polish} 0_0
    73 7130 00 60 68 78 70 60 + 	.byte $00, $60, $68, $78, $70, $60, $7e, $00	; "Ł" {system Polish} 0_0
    74 7138 00 3E 40 40 4E 42 + 	.byte $00, $3e, $40, $40, $4e, $42, $3e, $00	; "G" {simple} 0_0
    75 7140 18 00 7E 04 08 10 + 	.byte $18, $00, $7e, $04, $08, $10, $7e, $00	; "ż" {simple Polish} 0_0
    76 7148 04 08 3C 42 42 42 + 	.byte $04, $08, $3c, $42, $42, $42, $3c, $00	; "ó" {simple Polish} 0_0
    77 7150 00 30 10 18 30 10 + 	.byte $00, $30, $10, $18, $30, $10, $38, $00	; "ł" {simple Polish} 0_0
    78 7158 00 40 44 48 70 48 + 	.byte $00, $40, $44, $48, $70, $48, $44, $00	; "k" {simple} 0_0
    79 7160 00 00 3C 02 3E 42 + 	.byte $00, $00, $3c, $02, $3e, $42, $3e, $00	; "a" {simple} 0_0
    80 7168 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {simple Polish} 0_0
    81 7170 00 7E 04 7E 10 20 + 	.byte $00, $7e, $04, $7e, $10, $20, $7e, $00	; "Ż" {simple Polish} 0_0
    82 7178 00 7E 40 7C 40 40 + 	.byte $00, $7e, $40, $7c, $40, $40, $7e, $00	; "E" {simple} 0_0
    83 7180 18 3C 42 42 42 42 + 	.byte $18, $3c, $42, $42, $42, $42, $3c, $00	; "Ó" {simple Polish} 0_0
    84 7188 00 40 40 50 60 40 + 	.byte $00, $40, $40, $50, $60, $40, $7e, $00	; "Ł" {simple Polish} 0_0
    85 7190 00 42 44 48 58 64 + 	.byte $00, $42, $44, $48, $58, $64, $42, $00	; "K" {simple} 0_0
    86 7198 00 18 24 42 42 7E + 	.byte $00, $18, $24, $42, $42, $7e, $42, $00	; "A" {simple} 0_0
    87 71A0 00 63 63 6B 7F 77 + 	.byte $00, $63, $63, $6b, $7f, $77, $63, $00	; "W" {system} 0_0
    88 71A8 00 36 7F 7F 3E 1C + 	.byte $00, $36, $7f, $7f, $3e, $1c, $08, $00	; "♥" {system} 0_0
    89 71B0 00 00 66 66 66 3E + 	.byte $00, $00, $66, $66, $66, $3e, $0c, $78	; "y" {system} 0_0
    90 71B8 00 00 3C 66 66 66 + 	.byte $00, $00, $3c, $66, $66, $66, $3c, $00	; "o" {system} 0_0
    91 71C0 00 00 66 66 66 66 + 	.byte $00, $00, $66, $66, $66, $66, $3e, $00	; "u" {system} 0_0
    92 71C8 00 18 18 18 18 00 + 	.byte $00, $18, $18, $18, $18, $00, $18, $00	; "!" {system} 0_0
    93 71D0 00 3C 66 6E 76 66 + 	.byte $00, $3c, $66, $6e, $76, $66, $3c, $00	; "0" {system} 0_0
    94 71D8 00 18 38 18 18 18 + 	.byte $00, $18, $38, $18, $18, $18, $7e, $00	; "1" {system} 0_0
    95 71E0 00 3C 66 0C 18 30 + 	.byte $00, $3c, $66, $0c, $18, $30, $7e, $00	; "2" {system} 0_0
    96 71E8 00 7E 0C 18 0C 66 + 	.byte $00, $7e, $0c, $18, $0c, $66, $3c, $00	; "3" {system} 0_0
    97 71F0 00 0C 1C 3C 6C 7E + 	.byte $00, $0c, $1c, $3c, $6c, $7e, $0c, $00	; "4" {system} 0_0
    98 71F8 00 7E 60 7C 06 66 + 	.byte $00, $7e, $60, $7c, $06, $66, $3c, $00	; "5" {system} 0_0
    99 7200 00 3C 60 7C 66 66 + 	.byte $00, $3c, $60, $7c, $66, $66, $3c, $00	; "6" {system} 0_0
   100 7208 00 7E 06 0C 18 30 + 	.byte $00, $7e, $06, $0c, $18, $30, $30, $00	; "7" {system} 0_0
   101 7210 00 3C 66 3C 66 66 + 	.byte $00, $3c, $66, $3c, $66, $66, $3c, $00	; "8" {system} 0_0
   102 7218 00 3C 66 3E 06 0C + 	.byte $00, $3c, $66, $3e, $06, $0c, $38, $00	; "9" {system} 0_0
   103 7220 00 7C 66 7C 66 66 + 	.byte $00, $7c, $66, $7c, $66, $66, $7c, $00	; "B" {system} 0_0
   104 7228 00 78 6C 66 66 6C + 	.byte $00, $78, $6c, $66, $66, $6c, $78, $00	; "D" {system} 0_0
   105 7230 00 7E 60 7C 60 60 + 	.byte $00, $7e, $60, $7c, $60, $60, $60, $00	; "F" {system} 0_0
   106 7238 00 66 66 7E 66 66 + 	.byte $00, $66, $66, $7e, $66, $66, $66, $00	; "H" {system} 0_0
   107 7240 00 7E 18 18 18 18 + 	.byte $00, $7e, $18, $18, $18, $18, $7e, $00	; "I" {system} 0_0
   108 7248 00 06 06 06 06 66 + 	.byte $00, $06, $06, $06, $06, $66, $3c, $00	; "J" {system} 0_0
   109 7250 00 63 77 7F 6B 63 + 	.byte $00, $63, $77, $7f, $6b, $63, $63, $00	; "M" {system} 0_0
   110 7258 00 66 76 7E 7E 6E + 	.byte $00, $66, $76, $7e, $7e, $6e, $66, $00	; "N" {system} 0_0
   111 7260 00 3C 66 66 66 6C + 	.byte $00, $3c, $66, $66, $66, $6c, $36, $00	; "Q" {system} 0_0
   112 7268 00 7E 18 18 18 18 + 	.byte $00, $7e, $18, $18, $18, $18, $18, $00	; "T" {system} 0_0
   113 7270 00 66 66 66 66 66 + 	.byte $00, $66, $66, $66, $66, $66, $7e, $00	; "U" {system} 0_0
   114 7278 00 66 66 66 66 3C + 	.byte $00, $66, $66, $66, $66, $3c, $18, $00	; "V" {system} 0_0
   115 7280 00 66 66 3C 3C 66 + 	.byte $00, $66, $66, $3c, $3c, $66, $66, $00	; "X" {system} 0_0
   116 7288 00 66 66 3C 18 18 + 	.byte $00, $66, $66, $3c, $18, $18, $18, $00	; "Y" {system} 0_0
   117 7290 00 7E 0C 18 30 60 + 	.byte $00, $7e, $0c, $18, $30, $60, $7e, $00	; "Z" {system} 0_0
   118 7298 00 60 60 7C 66 66 + 	.byte $00, $60, $60, $7c, $66, $66, $7c, $00	; "b" {system} 0_0
   119 72A0 00 00 3C 60 60 60 + 	.byte $00, $00, $3c, $60, $60, $60, $3c, $00	; "c" {system} 0_0
   120 72A8 00 06 06 3E 66 66 + 	.byte $00, $06, $06, $3e, $66, $66, $3e, $00	; "d" {system} 0_0
   121 72B0 00 0E 18 3E 18 18 + 	.byte $00, $0e, $18, $3e, $18, $18, $18, $00	; "f" {system} 0_0
   122 72B8 00 60 60 7C 66 66 + 	.byte $00, $60, $60, $7c, $66, $66, $66, $00	; "h" {system} 0_0
   123 72C0 00 18 00 38 18 18 + 	.byte $00, $18, $00, $38, $18, $18, $3c, $00	; "i" {system} 0_0
   124 72C8 00 06 00 06 06 06 + 	.byte $00, $06, $00, $06, $06, $06, $06, $3c	; "j" {system} 0_0
   125 72D0 00 38 18 18 18 18 + 	.byte $00, $38, $18, $18, $18, $18, $3c, $00	; "l" {system} 0_0
   126 72D8 00 00 66 7F 7F 6B + 	.byte $00, $00, $66, $7f, $7f, $6b, $63, $00	; "m" {system} 0_0
   127 72E0 00 00 7C 66 66 66 + 	.byte $00, $00, $7c, $66, $66, $66, $66, $00	; "n" {system} 0_0
   128 72E8 00 00 7C 66 66 7C + 	.byte $00, $00, $7c, $66, $66, $7c, $60, $60	; "p" {system} 0_0
   129 72F0 00 00 3E 66 66 3E + 	.byte $00, $00, $3e, $66, $66, $3e, $06, $06	; "q" {system} 0_0
   130 72F8 00 00 7C 66 60 60 + 	.byte $00, $00, $7c, $66, $60, $60, $60, $00	; "r" {system} 0_0
   131 7300 00 00 3E 60 3C 06 + 	.byte $00, $00, $3e, $60, $3c, $06, $7c, $00	; "s" {system} 0_0
   132 7308 00 18 7E 18 18 18 + 	.byte $00, $18, $7e, $18, $18, $18, $0e, $00	; "t" {system} 0_0
   133 7310 00 00 66 66 66 3C + 	.byte $00, $00, $66, $66, $66, $3c, $18, $00	; "v" {system} 0_0
   134 7318 00 00 63 6B 7F 3E + 	.byte $00, $00, $63, $6b, $7f, $3e, $36, $00	; "w" {system} 0_0
   135 7320 00 00 66 3C 18 3C + 	.byte $00, $00, $66, $3c, $18, $3c, $66, $00	; "x" {system} 0_0
   136 7328 00 00 7E 0C 18 30 + 	.byte $00, $00, $7e, $0c, $18, $30, $7e, $00	; "z" {system} 0_0
   137 7330 00 7C 42 7C 42 42 + 	.byte $00, $7c, $42, $7c, $42, $42, $7c, $00	; "B" {simple} 0_0
   138 7338 00 3C 42 40 40 42 + 	.byte $00, $3c, $42, $40, $40, $42, $3c, $00	; "C" {simple} 0_0
   139 7340 00 78 44 42 42 44 + 	.byte $00, $78, $44, $42, $42, $44, $78, $00	; "D" {simple} 0_0
   140 7348 00 7E 40 7C 40 40 + 	.byte $00, $7e, $40, $7c, $40, $40, $40, $00	; "F" {simple} 0_0
   141 7350 00 02 02 02 02 42 + 	.byte $00, $02, $02, $02, $02, $42, $3c, $00	; "J" {simple} 0_0
   142 7358 00 40 40 40 40 40 + 	.byte $00, $40, $40, $40, $40, $40, $7e, $00	; "L" {simple} 0_0
   143 7360 00 63 55 49 49 41 + 	.byte $00, $63, $55, $49, $49, $41, $41, $00	; "M" {simple} 0_0
   144 7368 00 42 62 52 4A 46 + 	.byte $00, $42, $62, $52, $4a, $46, $42, $00	; "N" {simple} 0_0
   145 7370 00 3C 42 42 42 42 + 	.byte $00, $3c, $42, $42, $42, $42, $3c, $00	; "O" {simple} 0_0
   146 7378 00 7C 42 42 7C 40 + 	.byte $00, $7c, $42, $42, $7c, $40, $40, $00	; "P" {simple} 0_0
   147 7380 00 3C 42 42 4A 44 + 	.byte $00, $3c, $42, $42, $4a, $44, $3a, $00	; "Q" {simple} 0_0
   148 7388 00 7C 42 42 7C 44 + 	.byte $00, $7c, $42, $42, $7c, $44, $42, $00	; "R" {simple} 0_0
   149 7390 00 3C 40 3C 02 02 + 	.byte $00, $3c, $40, $3c, $02, $02, $3c, $00	; "S" {simple} 0_0
   150 7398 00 3E 08 08 08 08 + 	.byte $00, $3e, $08, $08, $08, $08, $08, $00	; "T" {simple} 0_0
   151 73A0 00 42 42 42 42 42 + 	.byte $00, $42, $42, $42, $42, $42, $3c, $00	; "U" {simple} 0_0
   152 73A8 00 42 42 42 42 24 + 	.byte $00, $42, $42, $42, $42, $24, $18, $00	; "V" {simple} 0_0
   153 73B0 00 41 41 49 49 55 + 	.byte $00, $41, $41, $49, $49, $55, $63, $00	; "W" {simple} 0_0
   154 73B8 00 42 24 18 18 24 + 	.byte $00, $42, $24, $18, $18, $24, $42, $00	; "X" {simple} 0_0
   155 73C0 00 22 22 14 08 08 + 	.byte $00, $22, $22, $14, $08, $08, $08, $00	; "Y" {simple} 0_0
   156 73C8 00 7E 04 08 10 20 + 	.byte $00, $7e, $04, $08, $10, $20, $7e, $00	; "Z" {simple} 0_0
   157 73D0			fontsen
