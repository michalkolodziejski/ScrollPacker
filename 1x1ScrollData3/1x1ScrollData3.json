{
    "comment": "What it does:",
    "comment": "  - 1x1-character scroll",
    "comment": "  - fonts come from several separate input font sets",
    "comment": "  - uses font sets identifiers to switch font sets",
    "comment": "  - uses 'set_default' font set identifier to set default font set",
    "comment": "  - uses 'begin' and 'zero' parameters in order to mark the end of scroll text with 0",

    "comment": "You can use font sets identifiers defined in 'fonts', and tags identifiers defined in 'lookups'.",
    "comment": "It is not required to switch font sets in all cases, because 'Scroll Packer' is sometimes",
    "comment": "able to do the best matching for you. You need to switch font set in ambiguous situations only.",
    "comment": "'Scroll Packer' first searches for tags in active font set and active font set with 'or' (set_or),",
    "comment": "then in default font set (set_default), and finally in others font sets.",
    "scroll": [
        " {simple}Hey guys! It's the demo of \"SCROLL PACKER\"{system}... Gżegżółka GŻEGŻÓŁKA ",
        "{~simple}{simple Polish}Gżegżółka GŻEGŻÓŁKA   ",
        "{system}We ♥ you!    "
    ],

    "comment": "'width', 'height': how many characters of width and height fonts have",
    "comment": "'begin': min. value of bytes in scroll text data",
    "comment": "'zero': an optional parameter indicating if to add zero at the end of scroll text data",
    "comment": "'language': C or Assembler",
    "comment": "'format': hex or dec",
    "comment": "'consolidation': false (usually used when each row is a different charset switched in DLI routine) or",
    "comment": "                  true (places all parts of WIDTHxHEIGHT-characters one by one in output array)",
    "comment": "                 ('consolidation' is not important when 'height' equals to 1)",
    "comment": "'text_org': an optional Assembler's ORG directive for scroll text data",
    "comment": "'fonts_org': optional Assembler's ORG directives for fonts data (consolidated or in parts)",
    "parameters": {
        "width": 1,
        "height": 1,
        "begin": 1,
        "zero": true,
        "language": "Assembler",
        "format": "hex",
        "text_org": "\torg $900\n",
        "fonts_org": ["\torg $7000\n"]
    },

    "comment": "'set': can be any string, unique within sets of 'fonts' and tags of 'lookups'",
    "comment": "'set_default': an optional parameter that defines identifier used to switch of default font set",
    "comment": "'set_or': an optional parameter that defines identifier used to turn bitwise OR on",
    "comment": "'file': the filename of a file containing fonts definitions",
    "comment": "'lookup': the name of a lookup defined in 'lookups'",
    "fonts": [
        { "set": "{system}",
          "file": "Fonts\\systemFonts1x1.fnt",
          "lookup": "systemFontsSimpleFonts1x1Lookup"
        },
        { "set": "{simple}",
          "set_default": "{~simple}",
          "file": "Fonts\\simpleFonts1x1.fnt",
          "lookup": "systemFontsSimpleFonts1x1Lookup"
        },
        { "set": "{system Polish}",
          "file": "Fonts\\systemFonts1x1Polish.fnt",
          "lookup": "systemFontsSimpleFonts1x1PolishLookup"
        },
        { "set": "{simple Polish}",
          "file": "Fonts\\simpleFonts1x1Polish.fnt",
          "lookup": "systemFontsSimpleFonts1x1PolishLookup"
        }
    ],

    "comment": "'tag': can be any string, unique within sets of 'fonts' and tags of particular 'lookup'",
    "comment": "'offsets': offsets of parts of font in fonts data, in 8-bytes chunks",
    "comment": "  for WxH-character fonts 'offsets': [  offset_0_0_part,   offset_1_0_part, ...,   offset_W-1_0_part, ",
    "comment": "                                        offset_0_1_part,   offset_1_1_part, ...,   offset_W-1_1_part, ",
    "comment": "                                                                            ...                       ",
    "comment": "                                      offset_0_H-1_part, offset_1_H-1_part, ..., offset_W-1_H-1_part] ",
    "comment": "",
    "comment": "  e.g. for 2x2-character fonts 'offsets': [offset_upper_left_part, offset_upper_right_part,  ",
    "comment": "                                           offset_lower_left_part, offset_lower_right_part]  ",
    "comment": "",
    "comment": "  e.g. for 1x1-character fonts 'offsets': [offset] ",
    "comment": "'or': an optional parameter which value is used to perform bitwise disjunction (bitwise OR) with",
    "comment": "      appropriate byte of scroll text data",
    "comment": "      (it somehow can be used for getting inverse characters)",
    "lookups": [
        { "lookup": "systemFontsSimpleFonts1x1Lookup",
          "mapping": [
              { "tag": " ",  "offsets": [  0] },
              { "tag": "!",  "offsets": [  1] },
              { "tag": "\"", "offsets": [  2] },
              { "tag": "#",  "offsets": [  3] },
              { "tag": "$",  "offsets": [  4] },
              { "tag": "%",  "offsets": [  5] },
              { "tag": "&",  "offsets": [  6] },
              { "tag": "'",  "offsets": [  7] },
              { "tag": "(",  "offsets": [  8] },
              { "tag": ")",  "offsets": [  9] },
              { "tag": "*",  "offsets": [ 10] },
              { "tag": "+",  "offsets": [ 11] },
              { "tag": ",",  "offsets": [ 12] },
              { "tag": "-",  "offsets": [ 13] },
              { "tag": ".",  "offsets": [ 14] },
              { "tag": "/",  "offsets": [ 15] },
              { "tag": "0",  "offsets": [ 16] },
              { "tag": "1",  "offsets": [ 17] },
              { "tag": "2",  "offsets": [ 18] },
              { "tag": "3",  "offsets": [ 19] },
              { "tag": "4",  "offsets": [ 20] },
              { "tag": "5",  "offsets": [ 21] },
              { "tag": "6",  "offsets": [ 22] },
              { "tag": "7",  "offsets": [ 23] },
              { "tag": "8",  "offsets": [ 24] },
              { "tag": "9",  "offsets": [ 25] },
              { "tag": ":",  "offsets": [ 26] },
              { "tag": ";",  "offsets": [ 27] },
              { "tag": "<",  "offsets": [ 28] },
              { "tag": "=",  "offsets": [ 29] },
              { "tag": ">",  "offsets": [ 30] },
              { "tag": "?",  "offsets": [ 31] },
              { "tag": "@",  "offsets": [ 32] },
              { "tag": "A",  "offsets": [ 33] },
              { "tag": "B",  "offsets": [ 34] },
              { "tag": "C",  "offsets": [ 35] },
              { "tag": "D",  "offsets": [ 36] },
              { "tag": "E",  "offsets": [ 37] },
              { "tag": "F",  "offsets": [ 38] },
              { "tag": "G",  "offsets": [ 39] },
              { "tag": "H",  "offsets": [ 40] },
              { "tag": "I",  "offsets": [ 41] },
              { "tag": "J",  "offsets": [ 42] },
              { "tag": "K",  "offsets": [ 43] },
              { "tag": "L",  "offsets": [ 44] },
              { "tag": "M",  "offsets": [ 45] },
              { "tag": "N",  "offsets": [ 46] },
              { "tag": "O",  "offsets": [ 47] },
              { "tag": "P",  "offsets": [ 48] },
              { "tag": "Q",  "offsets": [ 49] },
              { "tag": "R",  "offsets": [ 50] },
              { "tag": "S",  "offsets": [ 51] },
              { "tag": "T",  "offsets": [ 52] },
              { "tag": "U",  "offsets": [ 53] },
              { "tag": "V",  "offsets": [ 54] },
              { "tag": "W",  "offsets": [ 55] },
              { "tag": "X",  "offsets": [ 56] },
              { "tag": "Y",  "offsets": [ 57] },
              { "tag": "Z",  "offsets": [ 58] },
              { "tag": "[",  "offsets": [ 59] },
              { "tag": "\\", "offsets": [ 60] },
              { "tag": "]",  "offsets": [ 61] },
              { "tag": "^",  "offsets": [ 62] },
              { "tag": "_",  "offsets": [ 63] },
              { "tag": "♥",  "offsets": [ 64] },
              { "tag": "├",  "offsets": [ 65] },
              { "tag": "\uD83E\uDF87",  "offsets": [ 66] },
              { "tag": "┘",  "offsets": [ 67] },
              { "tag": "┤",  "offsets": [ 68] },
              { "tag": "┐",  "offsets": [ 69] },
              { "tag": "╱",  "offsets": [ 70] },
              { "tag": "╲",  "offsets": [ 71] },
              { "tag": "◢",  "offsets": [ 72] },
              { "tag": "▗",  "offsets": [ 73] },
              { "tag": "◣",  "offsets": [ 74] },
              { "tag": "▝",  "offsets": [ 75] },
              { "tag": "▘",  "offsets": [ 76] },
              { "tag": "\uD83E\uDF82",  "offsets": [ 77] },
              { "tag": "▂",  "offsets": [ 78] },
              { "tag": "▖",  "offsets": [ 79] },
              { "tag": "♣",  "offsets": [ 80] },
              { "tag": "┌",  "offsets": [ 81] },
              { "tag": "─",  "offsets": [ 82] },
              { "tag": "┼",  "offsets": [ 83] },
              { "tag": "•",  "offsets": [ 84] },
              { "tag": "▄",  "offsets": [ 85] },
              { "tag": "▎",  "offsets": [ 86] },
              { "tag": "┬",  "offsets": [ 87] },
              { "tag": "┴",  "offsets": [ 88] },
              { "tag": "▌",  "offsets": [ 89] },
              { "tag": "└",  "offsets": [ 90] },
              { "tag": "␛",  "offsets": [ 91] },
              { "tag": "↑",  "offsets": [ 92] },
              { "tag": "↓",  "offsets": [ 93] },
              { "tag": "←",  "offsets": [ 94] },
              { "tag": "→",  "offsets": [ 95] },
              { "tag": "♦",  "offsets": [ 96] },
              { "tag": "a",  "offsets": [ 97] },
              { "tag": "b",  "offsets": [ 98] },
              { "tag": "c",  "offsets": [ 99] },
              { "tag": "d",  "offsets": [100] },
              { "tag": "e",  "offsets": [101] },
              { "tag": "f",  "offsets": [102] },
              { "tag": "g",  "offsets": [103] },
              { "tag": "h",  "offsets": [104] },
              { "tag": "i",  "offsets": [105] },
              { "tag": "j",  "offsets": [106] },
              { "tag": "k",  "offsets": [107] },
              { "tag": "l",  "offsets": [108] },
              { "tag": "m",  "offsets": [109] },
              { "tag": "n",  "offsets": [110] },
              { "tag": "o",  "offsets": [111] },
              { "tag": "p",  "offsets": [112] },
              { "tag": "q",  "offsets": [113] },
              { "tag": "r",  "offsets": [114] },
              { "tag": "s",  "offsets": [115] },
              { "tag": "t",  "offsets": [116] },
              { "tag": "u",  "offsets": [117] },
              { "tag": "v",  "offsets": [118] },
              { "tag": "w",  "offsets": [119] },
              { "tag": "x",  "offsets": [120] },
              { "tag": "y",  "offsets": [121] },
              { "tag": "z",  "offsets": [122] },
              { "tag": "♠",  "offsets": [123] },
              { "tag": "|",  "offsets": [124] },
              { "tag": "\uD83E\uDCB0",  "offsets": [125] },
              { "tag": "◀",  "offsets": [126] },
              { "tag": "▶",  "offsets": [127] }
          ]
        },
        { "lookup": "systemFontsSimpleFonts1x1PolishLookup",
          "mapping": [
              { "tag": " ",  "offsets": [  0] },
              { "tag": "Ą",  "offsets": [  1] },
              { "tag": "Ć",  "offsets": [  2] },
              { "tag": "Ę",  "offsets": [  3] },
              { "tag": "Ł",  "offsets": [  4] },
              { "tag": "Ń",  "offsets": [  5] },
              { "tag": "Ó",  "offsets": [  6] },
              { "tag": "Ś",  "offsets": [  7] },
              { "tag": "Ź",  "offsets": [  8] },
              { "tag": "Ż",  "offsets": [  9] },
              { "tag": "ą",  "offsets": [ 10] },
              { "tag": "ć",  "offsets": [ 11] },
              { "tag": "ę",  "offsets": [ 12] },
              { "tag": "ł",  "offsets": [ 13] },
              { "tag": "ń",  "offsets": [ 14] },
              { "tag": "ó",  "offsets": [ 15] },
              { "tag": "ś",  "offsets": [ 16] },
              { "tag": "ź",  "offsets": [ 17] },
              { "tag": "ż",  "offsets": [ 18] }
          ]
        }
    ]
}