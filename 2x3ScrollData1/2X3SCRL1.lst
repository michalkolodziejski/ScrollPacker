mads 2.0.6 build 58 (28 Jan 17)
     1 				; "2x3 scroll, example 1", Atari XL/XE Intro
     2 				;
     3 				; what it does:
     4 				; - 2x3-character scroll in ANTIC mode 2
     5 				; - supports up to 64 unique 2x3-fonts
     6 				; - fonts come from several separate input font sets
     7 				; - length of scroll is limited by available memory only
     8 				; - uses DLI to set character base address for upper, middle
     9 				;   and lower parts of fonts
    10 				;
    11 				; code by tr1x / Agenda
    12 				; requirements: original Atari XL/XE 64KB PAL
    13 				; version: 1.0
    14 				; date: 2020-07-02
    15
    16 				.IF fonts0e - fonts0 > 1024
    17 				    .ERROR 'Fonts data is too big!'
    18 				.ENDIF
    19
    20 = 4000			video1	equ $4000
    21 = 4040			video2	equ $4040
    22 = 4080			video3	equ $4080
    23
    24 = 0012			rtclok	equ $0012
    25 = 00C0			txtptr	equ $00c0
    26 = 0200			vdslst	equ $0200
    27 = 0230			sdlstl	equ $0230
    28 = 02C4			color0	equ $02c4
    29 = 02C5			color1	equ $02c5
    30 = 02C6			color2	equ $02c6
    31 = 02C7			color3	equ $02c7
    32 = D404			hscrol	equ $d404
    33 = D409			chbase	equ $d409
    34 = D40A			wsync	equ $d40a
    35 = D40B			vcount	equ $d40b
    36 = D40E			nmien	equ $d40e
    37 = FFFA			nmivec	equ $fffa
    38
    39 					org $600
    40
    41 					; wait one frame
    42 FFFF> 0600-06F0> A5 14		lda rtclok+2
    43 0602 C5 14		wait	cmp rtclok+2
    44 0604 F0 FC			beq wait
    45
    46 					; set DLI routine
    47 0606 A9 40			lda #$40
    48 0608 8D 0E D4			sta nmien	; disable DLI
    49 060B A9 A3			lda #<dli1
    50 060D 8D 00 02			sta vdslst
    51 0610 A9 06			lda #>dli1
    52 0612 8D 01 02			sta vdslst+1
    53 0615 A9 C0			lda #$c0
    54 0617 8D 0E D4			sta nmien	; enable DLI
    55
    56 					; set display list
    57 061A A9 E2			lda #<dlist
    58 061C 8D 30 02			sta sdlstl
    59 061F A9 06			lda #>dlist
    60 0621 8D 31 02			sta sdlstl+1
    61
    62 					; set colors
    63 0624 A9 88			lda #$88
    64 0626 8D C4 02			sta color0
    65 0629 A9 86			lda #$86
    66 062B 8D C6 02			sta color2
    67 062E A9 84			lda #$84
    68 0630 8D C5 02			sta color1
    69 0633 A9 82			lda #$82
    70 0635 8D C7 02			sta color3
    71
    72 					; initialize text pointer to the first character of scroll text
    73 0638 A9 00			lda <text
    74 063A 85 C0			sta txtptr
    75 063C A9 09			lda >text
    76 063E 85 C1			sta txtptr+1
    77
    78 0640 A2 07			ldx #$07
    79 0642 8E 04 D4		main	stx hscrol
    80
    81 					; delay
    82 0645 A5 14			lda rtclok+2
    83 0647 C5 14		delay	cmp rtclok+2
    84 0649 F0 FC			beq delay
    85
    86 064B CA				dex
    87 064C 10 F4			bpl main
    88 064E A2 07			ldx #$07
    89 0650 8E 04 D4			stx hscrol
    90
    91 					; move data in viewport two characters left
    92 0653 A0 00			ldy #$00
    93 0655 B9 02 40		move	lda video1+2,y
    94 0658 99 00 40			sta video1,y
    95 065B B9 42 40			lda video2+2,y
    96 065E 99 40 40			sta video2,y
    97 0661 B9 82 40			lda video3+2,y
    98 0664 99 80 40			sta video3,y
    99 0667 C8				iny
   100 0668 C0 2A			cpy #$2a
   101 066A D0 E9			bne move
   102
   103 					; put new character of scroll text
   104 066C A0 00			ldy #$00
   105 066E B1 C0			lda (txtptr),y
   106 0670 0A				asl
   107 0671 8D 2A 40			sta video1+$2a
   108 0674 8D 6A 40			sta video2+$2a
   109 0677 8D AA 40			sta video3+$2a
   110 067A 18				clc
   111 067B 69 01			adc #$01
   112 067D 8D 2B 40			sta video1+$2b
   113 0680 8D 6B 40			sta video2+$2b
   114 0683 8D AB 40			sta video3+$2b
   115
   116 					; point to the next character of scroll text
   117 0686 E6 C0			inc txtptr
   118 0688 D0 02			bne skip
   119 068A E6 C1			inc txtptr+1
   120 068C			skip
   121
   122 					; check if it is the end of scroll text
   123 068C A5 C0			lda txtptr
   124 068E C9 6C			cmp #<textend
   125 0690 D0 B0			bne main
   126 0692 A5 C1			lda txtptr+1
   127 0694 C9 09			cmp #>textend
   128 0696 D0 AA			bne main
   129
   130 					; initialize text pointer to the first character of scroll text
   131 0698 A9 00			lda <text
   132 069A 85 C0			sta txtptr
   133 069C A9 09			lda >text
   134 069E 85 C1			sta txtptr+1
   135
   136 06A0 4C 42 06			jmp main
   137
   138
   139 					; display list interrupt routines
   140 06A3 48			dli1	pha
   141 06A4 A9 70			lda #>fonts0
   142 06A6 8D 0A D4			sta wsync
   143 06A9 8D 09 D4			sta chbase
   144 06AC A9 B8			lda #<dli2
   145 06AE 8D 00 02			sta vdslst
   146 06B1 A9 06			lda #>dli2
   147 06B3 8D 01 02			sta vdslst+1
   148 06B6 68				pla
   149 06B7 40				rti
   150
   151 06B8 48			dli2	pha
   152 06B9 A9 80			lda #>fonts1
   153 06BB 8D 0A D4			sta wsync
   154 06BE 8D 09 D4			sta chbase
   155 06C1 A9 CD			lda #<dli3
   156 06C3 8D 00 02			sta vdslst
   157 06C6 A9 06			lda #>dli3
   158 06C8 8D 01 02			sta vdslst+1
   159 06CB 68				pla
   160 06CC 40				rti
   161 					
   162 06CD 48			dli3	pha
   163 06CE A9 90			lda #>fonts2
   164 06D0 8D 0A D4			sta wsync
   165 06D3 8D 09 D4			sta chbase
   166 06D6 A9 A3			lda #<dli1
   167 06D8 8D 00 02			sta vdslst
   168 06DB A9 06			lda #>dli1
   169 06DD 8D 01 02			sta vdslst+1
   170 06E0 68				pla
   171 06E1 40				rti
   172
   173
   174 					; display list
   175 06E2 70 70		dlist	.byte $70, $70			; 16 blank lines
   176 06E4 F0				.byte $70 | $80			; 8 blank lines + DLI
   177 06E5 D4				.byte $04 | $80 | $40 | $10	; mode 4 + DLI + LMS + HSCROLL
   178 06E6 00 40			.byte $00, $40			; screen address
   179 06E8 D4				.byte $04 | $80 | $40 | $10	; mode 4 + DLI + LMS + HSCROLL
   180 06E9 40 40			.byte $40, $40			; screen address
   181 06EB 54				.byte $04 | $40 | $10		; mode 4 + LMS + HSCROLL
   182 06EC 80 40			.byte $80, $40			; screen address
   183 06EE 41				.byte $41			; jump and wait for VBLANK
   184 06EF E2 06			.byte <dlist, >dlist		; jump to this address
   185
   186 					; data comes from "2x3ScrollData1.json"
   187 06F1				icl '2X3DTA1.ASM'
     1 				; "Scroll Packer" v0.1, 2020-07-16 22:28:44, "2x3ScrollData1\2x3ScrollData1.json"
     2
     3 06F1				org $900
     4
     5 				; scroll text, length: 108, unique characters: 37
     6 0900-096B> 00 01 02 03 + text	.byte $00, $01, $02, $03, $00, $04, $05, $03	;  HEY GUY
     7 0908 06 07 00 08 09 0A + 	.byte $06, $07, $00, $08, $09, $0a, $06, $00	; S! IT'S 
     8 0910 09 01 02 00 0B 02 + 	.byte $09, $01, $02, $00, $0b, $02, $0c, $0d	; THE DEMO
     9 0918 00 0D 0E 00 06 0F + 	.byte $00, $0d, $0e, $00, $06, $0f, $10, $0d	;  OF SCRO
    10 0920 11 11 00 12 13 0F + 	.byte $11, $11, $00, $12, $13, $0f, $14, $02	; LL PACKE
    11 0928 10 15 15 15 00 16 + 	.byte $10, $15, $15, $15, $00, $16, $17, $00	; R... [Atari left][Atari right] 
    12 0930 08 06 00 09 01 02 + 	.byte $08, $06, $00, $09, $01, $02, $00, $18	; IS THE B
    13 0938 02 06 09 07 00 19 + 	.byte $02, $06, $09, $07, $00, $19, $02, $00	; EST! WE 
    14 0940 1A 1B 00 03 0D 05 + 	.byte $1a, $1b, $00, $03, $0d, $05, $07, $00	; [heart left][heart right] YOU! 
    15 0948 13 18 0F 0B 02 0E + 	.byte $13, $18, $0f, $0b, $02, $0e, $04, $01	; ABCDEFGH
    16 0950 08 1C 14 11 0C 1D + 	.byte $08, $1c, $14, $11, $0c, $1d, $0d, $12	; IJKLMNOP
    17 0958 1E 10 06 09 05 1F + 	.byte $1e, $10, $06, $09, $05, $1f, $19, $20	; QRSTUVWX
    18 0960 03 21 15 22 23 07 + 	.byte $03, $21, $15, $22, $23, $07, $24, $0a	; YZ.,:!?'
    19 0968 00 00 00 00			.byte $00, $00, $00, $00	;     
    20 096C			textend
    21
    22 096C				org $7000
    23
    24 				; fonts data, row no. 0
    25 7000-724F> 00 00 00 00 + fonts0	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 0_0
    26 7008 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 1_0
    27 7010 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "H" {uppercaseA-P} 0_0
    28 7018 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "H" {uppercaseA-P} 1_0
    29 7020 55 6A 60 60 60 60 + 	.byte $55, $6a, $60, $60, $60, $60, $60, $60	; "E" {uppercaseA-P} 0_0
    30 7028 54 A8 00 00 00 00 + 	.byte $54, $a8, $00, $00, $00, $00, $00, $00	; "E" {uppercaseA-P} 1_0
    31 7030 60 60 60 60 60 18 + 	.byte $60, $60, $60, $60, $60, $18, $18, $06	; "Y" {uppercaseQ-Z} 0_0
    32 7038 24 24 24 24 24 90 + 	.byte $24, $24, $24, $24, $24, $90, $90, $40	; "Y" {uppercaseQ-Z} 1_0
    33 7040 01 06 18 18 60 60 + 	.byte $01, $06, $18, $18, $60, $60, $60, $60	; "G" {uppercaseA-P} 0_0
    34 7048 40 90 24 08 00 00 + 	.byte $40, $90, $24, $08, $00, $00, $00, $00	; "G" {uppercaseA-P} 1_0
    35 7050 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "U" {uppercaseQ-Z} 0_0
    36 7058 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "U" {uppercaseQ-Z} 1_0
    37 7060 01 06 18 18 60 60 + 	.byte $01, $06, $18, $18, $60, $60, $60, $60	; "S" {uppercaseQ-Z} 0_0
    38 7068 40 90 24 08 00 00 + 	.byte $40, $90, $24, $08, $00, $00, $00, $00	; "S" {uppercaseQ-Z} 1_0
    39 7070 01 01 01 01 01 01 + 	.byte $01, $01, $01, $01, $01, $01, $01, $01	; "!" {special} 0_0
    40 7078 80 80 80 80 80 80 + 	.byte $80, $80, $80, $80, $80, $80, $80, $80	; "!" {special} 1_0
    41 7080 55 56 06 06 06 06 + 	.byte $55, $56, $06, $06, $06, $06, $06, $06	; "I" {uppercaseA-P} 0_0
    42 7088 50 A0 00 00 00 00 + 	.byte $50, $a0, $00, $00, $00, $00, $00, $00	; "I" {uppercaseA-P} 1_0
    43 7090 55 A6 06 06 06 06 + 	.byte $55, $a6, $06, $06, $06, $06, $06, $06	; "T" {uppercaseQ-Z} 0_0
    44 7098 50 A0 00 00 00 00 + 	.byte $50, $a0, $00, $00, $00, $00, $00, $00	; "T" {uppercaseQ-Z} 1_0
    45 70A0 18 18 06 06 01 01 + 	.byte $18, $18, $06, $06, $01, $01, $00, $00	; "'" {special} 0_0
    46 70A8 00 00 00 00 80 80 + 	.byte $00, $00, $00, $00, $80, $80, $00, $00	; "'" {special} 1_0
    47 70B0 55 69 62 60 60 60 + 	.byte $55, $69, $62, $60, $60, $60, $60, $60	; "D" {uppercaseA-P} 0_0
    48 70B8 00 40 40 90 20 24 + 	.byte $00, $40, $40, $90, $20, $24, $08, $08	; "D" {uppercaseA-P} 1_0
    49 70C0 50 50 54 54 69 62 + 	.byte $50, $50, $54, $54, $69, $62, $62, $60	; "M" {uppercaseA-P} 0_0
    50 70C8 14 14 54 54 A4 24 + 	.byte $14, $14, $54, $54, $a4, $24, $24, $24	; "M" {uppercaseA-P} 1_0
    51 70D0 05 06 18 18 60 60 + 	.byte $05, $06, $18, $18, $60, $60, $60, $60	; "O" {uppercaseA-P} 0_0
    52 70D8 40 40 90 90 24 24 + 	.byte $40, $40, $90, $90, $24, $24, $24, $24	; "O" {uppercaseA-P} 1_0
    53 70E0 55 6A 60 60 60 60 + 	.byte $55, $6a, $60, $60, $60, $60, $60, $60	; "F" {uppercaseA-P} 0_0
    54 70E8 54 A8 00 00 00 00 + 	.byte $54, $a8, $00, $00, $00, $00, $00, $00	; "F" {uppercaseA-P} 1_0
    55 70F0 01 06 18 18 60 60 + 	.byte $01, $06, $18, $18, $60, $60, $60, $60	; "C" {uppercaseA-P} 0_0
    56 70F8 40 90 24 08 00 00 + 	.byte $40, $90, $24, $08, $00, $00, $00, $00	; "C" {uppercaseA-P} 1_0
    57 7100 55 6A 60 60 60 60 + 	.byte $55, $6a, $60, $60, $60, $60, $60, $60	; "R" {uppercaseQ-Z} 0_0
    58 7108 40 50 90 24 24 24 + 	.byte $40, $50, $90, $24, $24, $24, $24, $24	; "R" {uppercaseQ-Z} 1_0
    59 7110 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "L" {uppercaseA-P} 0_0
    60 7118 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "L" {uppercaseA-P} 1_0
    61 7120 55 55 6A 60 60 60 + 	.byte $55, $55, $6a, $60, $60, $60, $60, $60	; "P" {uppercaseA-P} 0_0
    62 7128 40 40 50 90 24 24 + 	.byte $40, $40, $50, $90, $24, $24, $24, $24	; "P" {uppercaseA-P} 1_0
    63 7130 05 16 18 60 60 60 + 	.byte $05, $16, $18, $60, $60, $60, $60, $60	; "A" {uppercaseA-P} 0_0
    64 7138 40 50 90 24 24 24 + 	.byte $40, $50, $90, $24, $24, $24, $24, $24	; "A" {uppercaseA-P} 1_0
    65 7140 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "K" {uppercaseA-P} 0_0
    66 7148 08 08 08 24 20 20 + 	.byte $08, $08, $08, $24, $20, $20, $90, $80	; "K" {uppercaseA-P} 1_0
    67 7150 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "." {special} 0_0
    68 7158 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "." {special} 1_0
    69 7160 02 02 02 02 02 02 + 	.byte $02, $02, $02, $02, $02, $02, $02, $02	; "[Atari left]" {special} 0_0
    70 7168 45 45 45 45 45 45 + 	.byte $45, $45, $45, $45, $45, $45, $45, $45	; "[Atari left]" {special} 1_0
    71 7170 86 86 86 86 86 86 + 	.byte $86, $86, $86, $86, $86, $86, $86, $86	; "[Atari right]" {special} 0_0
    72 7178 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "[Atari right]" {special} 1_0
    73 7180 55 6A 60 60 60 60 + 	.byte $55, $6a, $60, $60, $60, $60, $60, $60	; "B" {uppercaseA-P} 0_0
    74 7188 40 90 20 08 08 08 + 	.byte $40, $90, $20, $08, $08, $08, $08, $20	; "B" {uppercaseA-P} 1_0
    75 7190 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "W" {uppercaseQ-Z} 0_0
    76 7198 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "W" {uppercaseQ-Z} 1_0
    77 71A0 00 01 06 06 06 18 + 	.byte $00, $01, $06, $06, $06, $18, $18, $18	; "[heart left]" {special} 0_0
    78 71A8 40 90 90 24 24 09 + 	.byte $40, $90, $90, $24, $24, $09, $09, $02	; "[heart left]" {special} 1_0
    79 71B0 04 19 1A 62 62 80 + 	.byte $04, $19, $1a, $62, $62, $80, $80, $00	; "[heart right]" {special} 0_0
    80 71B8 00 00 40 40 40 90 + 	.byte $00, $00, $40, $40, $40, $90, $90, $90	; "[heart right]" {special} 1_0
    81 71C0 55 AA 00 00 00 00 + 	.byte $55, $aa, $00, $00, $00, $00, $00, $00	; "J" {uppercaseA-P} 0_0
    82 71C8 54 A4 24 24 24 24 + 	.byte $54, $a4, $24, $24, $24, $24, $24, $24	; "J" {uppercaseA-P} 1_0
    83 71D0 50 50 50 54 54 54 + 	.byte $50, $50, $50, $54, $54, $54, $54, $54	; "N" {uppercaseA-P} 0_0
    84 71D8 14 14 14 14 14 14 + 	.byte $14, $14, $14, $14, $14, $14, $14, $14	; "N" {uppercaseA-P} 1_0
    85 71E0 05 06 18 18 60 60 + 	.byte $05, $06, $18, $18, $60, $60, $60, $60	; "Q" {uppercaseQ-Z} 0_0
    86 71E8 40 40 90 90 24 24 + 	.byte $40, $40, $90, $90, $24, $24, $24, $24	; "Q" {uppercaseQ-Z} 1_0
    87 71F0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "V" {uppercaseQ-Z} 0_0
    88 71F8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "V" {uppercaseQ-Z} 1_0
    89 7200 60 60 60 60 60 10 + 	.byte $60, $60, $60, $60, $60, $10, $18, $04	; "X" {uppercaseQ-Z} 0_0
    90 7208 24 24 24 24 24 10 + 	.byte $24, $24, $24, $24, $24, $10, $90, $40	; "X" {uppercaseQ-Z} 1_0
    91 7210 55 AA 00 00 00 00 + 	.byte $55, $aa, $00, $00, $00, $00, $02, $02	; "Z" {uppercaseQ-Z} 0_0
    92 7218 54 A4 A4 90 90 90 + 	.byte $54, $a4, $a4, $90, $90, $90, $40, $40	; "Z" {uppercaseQ-Z} 1_0
    93 7220 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "," {special} 0_0
    94 7228 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "," {special} 1_0
    95 7230 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; ":" {special} 0_0
    96 7238 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; ":" {special} 1_0
    97 7240 05 1A 1A 60 60 00 + 	.byte $05, $1a, $1a, $60, $60, $00, $00, $00	; "?" {special} 0_0
    98 7248 00 40 40 90 90 24 + 	.byte $00, $40, $40, $90, $90, $24, $24, $90	; "?" {special} 1_0
    99 7250			fonts0e
   100
   101 7250				org $8000
   102
   103 				; fonts data, row no. 1
   104 8000-824F> 00 00 00 00 + fonts1	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 0_1
   105 8008 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 1_1
   106 8010 60 60 6A 65 60 60 + 	.byte $60, $60, $6a, $65, $60, $60, $60, $60	; "H" {uppercaseA-P} 0_1
   107 8018 24 24 A4 64 24 24 + 	.byte $24, $24, $a4, $64, $24, $24, $24, $24	; "H" {uppercaseA-P} 1_1
   108 8020 60 60 6A 65 60 60 + 	.byte $60, $60, $6a, $65, $60, $60, $60, $60	; "E" {uppercaseA-P} 0_1
   109 8028 00 00 A0 50 00 00 + 	.byte $00, $00, $a0, $50, $00, $00, $00, $00	; "E" {uppercaseA-P} 1_1
   110 8030 06 01 01 01 01 01 + 	.byte $06, $01, $01, $01, $01, $01, $01, $01	; "Y" {uppercaseQ-Z} 0_1
   111 8038 40 80 80 80 80 80 + 	.byte $40, $80, $80, $80, $80, $80, $80, $80	; "Y" {uppercaseQ-Z} 1_1
   112 8040 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "G" {uppercaseA-P} 0_1
   113 8048 00 00 54 A8 08 08 + 	.byte $00, $00, $54, $a8, $08, $08, $08, $08	; "G" {uppercaseA-P} 1_1
   114 8050 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "U" {uppercaseQ-Z} 0_1
   115 8058 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "U" {uppercaseQ-Z} 1_1
   116 8060 10 24 09 02 00 00 + 	.byte $10, $24, $09, $02, $00, $00, $00, $00	; "S" {uppercaseQ-Z} 0_1
   117 8068 00 00 00 40 90 90 + 	.byte $00, $00, $00, $40, $90, $90, $24, $24	; "S" {uppercaseQ-Z} 1_1
   118 8070 01 01 01 01 01 01 + 	.byte $01, $01, $01, $01, $01, $01, $01, $00	; "!" {special} 0_1
   119 8078 80 80 80 80 80 80 + 	.byte $80, $80, $80, $80, $80, $80, $80, $00	; "!" {special} 1_1
   120 8080 06 06 06 06 06 06 + 	.byte $06, $06, $06, $06, $06, $06, $06, $06	; "I" {uppercaseA-P} 0_1
   121 8088 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "I" {uppercaseA-P} 1_1
   122 8090 06 06 06 06 06 06 + 	.byte $06, $06, $06, $06, $06, $06, $06, $06	; "T" {uppercaseQ-Z} 0_1
   123 8098 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "T" {uppercaseQ-Z} 1_1
   124 80A0 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "'" {special} 0_1
   125 80A8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "'" {special} 1_1
   126 80B0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "D" {uppercaseA-P} 0_1
   127 80B8 08 08 08 08 08 08 + 	.byte $08, $08, $08, $08, $08, $08, $08, $08	; "D" {uppercaseA-P} 1_1
   128 80C0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "M" {uppercaseA-P} 0_1
   129 80C8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "M" {uppercaseA-P} 1_1
   130 80D0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "O" {uppercaseA-P} 0_1
   131 80D8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "O" {uppercaseA-P} 1_1
   132 80E0 60 60 6A 65 60 60 + 	.byte $60, $60, $6a, $65, $60, $60, $60, $60	; "F" {uppercaseA-P} 0_1
   133 80E8 00 00 A0 50 00 00 + 	.byte $00, $00, $a0, $50, $00, $00, $00, $00	; "F" {uppercaseA-P} 1_1
   134 80F0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "C" {uppercaseA-P} 0_1
   135 80F8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "C" {uppercaseA-P} 1_1
   136 8100 60 60 6A 65 69 69 + 	.byte $60, $60, $6a, $65, $69, $69, $62, $62	; "R" {uppercaseQ-Z} 0_1
   137 8108 24 90 50 40 00 00 + 	.byte $24, $90, $50, $40, $00, $00, $40, $40	; "R" {uppercaseQ-Z} 1_1
   138 8110 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "L" {uppercaseA-P} 0_1
   139 8118 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "L" {uppercaseA-P} 1_1
   140 8120 60 60 6A 65 60 60 + 	.byte $60, $60, $6a, $65, $60, $60, $60, $60	; "P" {uppercaseA-P} 0_1
   141 8128 24 90 50 40 00 00 + 	.byte $24, $90, $50, $40, $00, $00, $00, $00	; "P" {uppercaseA-P} 1_1
   142 8130 60 60 6A 65 60 60 + 	.byte $60, $60, $6a, $65, $60, $60, $60, $60	; "A" {uppercaseA-P} 0_1
   143 8138 24 24 A4 64 24 24 + 	.byte $24, $24, $a4, $64, $24, $24, $24, $24	; "A" {uppercaseA-P} 1_1
   144 8140 60 62 69 65 61 60 + 	.byte $60, $62, $69, $65, $61, $60, $60, $60	; "K" {uppercaseA-P} 0_1
   145 8148 80 40 00 00 40 40 + 	.byte $80, $40, $00, $00, $40, $40, $40, $50	; "K" {uppercaseA-P} 1_1
   146 8150 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "." {special} 0_1
   147 8158 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "." {special} 1_1
   148 8160 02 02 02 02 09 09 + 	.byte $02, $02, $02, $02, $09, $09, $09, $09	; "[Atari left]" {special} 0_1
   149 8168 45 45 45 45 05 05 + 	.byte $45, $45, $45, $45, $05, $05, $05, $05	; "[Atari left]" {special} 1_1
   150 8170 86 86 86 86 81 81 + 	.byte $86, $86, $86, $86, $81, $81, $81, $81	; "[Atari right]" {special} 0_1
   151 8178 00 00 00 00 80 80 + 	.byte $00, $00, $00, $00, $80, $80, $80, $80	; "[Atari right]" {special} 1_1
   152 8180 60 60 6A 6A 60 60 + 	.byte $60, $60, $6a, $6a, $60, $60, $60, $60	; "B" {uppercaseA-P} 0_1
   153 8188 20 90 40 40 90 20 + 	.byte $20, $90, $40, $40, $90, $20, $20, $08	; "B" {uppercaseA-P} 1_1
   154 8190 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $62	; "W" {uppercaseQ-Z} 0_1
   155 8198 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "W" {uppercaseQ-Z} 1_1
   156 81A0 18 18 18 06 06 06 + 	.byte $18, $18, $18, $06, $06, $06, $01, $01	; "[heart left]" {special} 0_1
   157 81A8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $80, $80	; "[heart left]" {special} 1_1
   158 81B0 00 00 00 02 02 02 + 	.byte $00, $00, $00, $02, $02, $02, $09, $09	; "[heart right]" {special} 0_1
   159 81B8 90 90 90 40 40 40 + 	.byte $90, $90, $90, $40, $40, $40, $00, $00	; "[heart right]" {special} 1_1
   160 81C0 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "J" {uppercaseA-P} 0_1
   161 81C8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "J" {uppercaseA-P} 1_1
   162 81D0 69 62 62 62 62 62 + 	.byte $69, $62, $62, $62, $62, $62, $62, $60	; "N" {uppercaseA-P} 0_1
   163 81D8 14 14 14 14 14 14 + 	.byte $14, $14, $14, $14, $14, $14, $54, $94	; "N" {uppercaseA-P} 1_1
   164 81E0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $60, $60	; "Q" {uppercaseQ-Z} 0_1
   165 81E8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $24, $24	; "Q" {uppercaseQ-Z} 1_1
   166 81F0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $18, $18	; "V" {uppercaseQ-Z} 0_1
   167 81F8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $90, $90	; "V" {uppercaseQ-Z} 1_1
   168 8200 06 01 01 01 06 04 + 	.byte $06, $01, $01, $01, $06, $04, $18, $10	; "X" {uppercaseQ-Z} 0_1
   169 8208 40 00 00 00 40 40 + 	.byte $40, $00, $00, $00, $40, $40, $90, $10	; "X" {uppercaseQ-Z} 1_1
   170 8210 02 09 09 09 24 24 + 	.byte $02, $09, $09, $09, $24, $24, $24, $90	; "Z" {uppercaseQ-Z} 0_1
   171 8218 40 00 00 00 00 00 + 	.byte $40, $00, $00, $00, $00, $00, $00, $00	; "Z" {uppercaseQ-Z} 1_1
   172 8220 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "," {special} 0_1
   173 8228 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "," {special} 1_1
   174 8230 00 00 14 14 24 24 + 	.byte $00, $00, $14, $14, $24, $24, $00, $00	; ":" {special} 0_1
   175 8238 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; ":" {special} 1_1
   176 8240 00 02 02 09 09 09 + 	.byte $00, $02, $02, $09, $09, $09, $09, $00	; "?" {special} 0_1
   177 8248 90 40 40 00 00 00 + 	.byte $90, $40, $40, $00, $00, $00, $00, $00	; "?" {special} 1_1
   178 8250			fonts1e
   179
   180 8250				org $9000
   181
   182 				; fonts data, row no. 2
   183 9000-924F> 00 00 00 00 + fonts2	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 0_2
   184 9008 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; " " {uppercaseQ-Z} 1_2
   185 9010 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "H" {uppercaseA-P} 0_2
   186 9018 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $00, $00	; "H" {uppercaseA-P} 1_2
   187 9020 60 60 60 60 6A 55 + 	.byte $60, $60, $60, $60, $6a, $55, $00, $00	; "E" {uppercaseA-P} 0_2
   188 9028 00 00 00 00 A8 54 + 	.byte $00, $00, $00, $00, $a8, $54, $00, $00	; "E" {uppercaseA-P} 1_2
   189 9030 01 01 01 01 01 01 + 	.byte $01, $01, $01, $01, $01, $01, $00, $00	; "Y" {uppercaseQ-Z} 0_2
   190 9038 80 80 80 80 80 80 + 	.byte $80, $80, $80, $80, $80, $80, $00, $00	; "Y" {uppercaseQ-Z} 1_2
   191 9040 60 60 18 18 06 01 + 	.byte $60, $60, $18, $18, $06, $01, $00, $00	; "G" {uppercaseA-P} 0_2
   192 9048 08 08 08 24 90 40 + 	.byte $08, $08, $08, $24, $90, $40, $00, $00	; "G" {uppercaseA-P} 1_2
   193 9050 60 60 18 18 06 05 + 	.byte $60, $60, $18, $18, $06, $05, $00, $00	; "U" {uppercaseQ-Z} 0_2
   194 9058 24 24 90 90 40 40 + 	.byte $24, $24, $90, $90, $40, $40, $00, $00	; "U" {uppercaseQ-Z} 1_2
   195 9060 00 00 80 60 1A 05 + 	.byte $00, $00, $80, $60, $1a, $05, $00, $00	; "S" {uppercaseQ-Z} 0_2
   196 9068 24 24 90 90 40 00 + 	.byte $24, $24, $90, $90, $40, $00, $00, $00	; "S" {uppercaseQ-Z} 1_2
   197 9070 00 00 01 01 02 02 + 	.byte $00, $00, $01, $01, $02, $02, $00, $00	; "!" {special} 0_2
   198 9078 00 00 40 40 40 40 + 	.byte $00, $00, $40, $40, $40, $40, $00, $00	; "!" {special} 1_2
   199 9080 06 06 06 06 06 56 + 	.byte $06, $06, $06, $06, $06, $56, $55, $00	; "I" {uppercaseA-P} 0_2
   200 9088 00 00 00 00 00 A0 + 	.byte $00, $00, $00, $00, $00, $a0, $50, $00	; "I" {uppercaseA-P} 1_2
   201 9090 06 06 06 06 06 06 + 	.byte $06, $06, $06, $06, $06, $06, $00, $00	; "T" {uppercaseQ-Z} 0_2
   202 9098 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "T" {uppercaseQ-Z} 1_2
   203 90A0 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "'" {special} 0_2
   204 90A8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "'" {special} 1_2
   205 90B0 60 60 60 62 69 55 + 	.byte $60, $60, $60, $62, $69, $55, $00, $00	; "D" {uppercaseA-P} 0_2
   206 90B8 24 20 90 40 40 00 + 	.byte $24, $20, $90, $40, $40, $00, $00, $00	; "D" {uppercaseA-P} 1_2
   207 90C0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "M" {uppercaseA-P} 0_2
   208 90C8 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $00, $00	; "M" {uppercaseA-P} 1_2
   209 90D0 60 60 18 18 06 05 + 	.byte $60, $60, $18, $18, $06, $05, $00, $00	; "O" {uppercaseA-P} 0_2
   210 90D8 24 24 90 90 40 40 + 	.byte $24, $24, $90, $90, $40, $40, $00, $00	; "O" {uppercaseA-P} 1_2
   211 90E0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "F" {uppercaseA-P} 0_2
   212 90E8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "F" {uppercaseA-P} 1_2
   213 90F0 60 60 18 18 06 01 + 	.byte $60, $60, $18, $18, $06, $01, $00, $00	; "C" {uppercaseA-P} 0_2
   214 90F8 00 00 08 24 90 40 + 	.byte $00, $00, $08, $24, $90, $40, $00, $00	; "C" {uppercaseA-P} 1_2
   215 9100 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "R" {uppercaseQ-Z} 0_2
   216 9108 90 90 90 24 24 24 + 	.byte $90, $90, $90, $24, $24, $24, $00, $00	; "R" {uppercaseQ-Z} 1_2
   217 9110 60 60 60 60 6A 55 + 	.byte $60, $60, $60, $60, $6a, $55, $00, $00	; "L" {uppercaseA-P} 0_2
   218 9118 00 00 00 00 A8 54 + 	.byte $00, $00, $00, $00, $a8, $54, $00, $00	; "L" {uppercaseA-P} 1_2
   219 9120 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "P" {uppercaseA-P} 0_2
   220 9128 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "P" {uppercaseA-P} 1_2
   221 9130 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "A" {uppercaseA-P} 0_2
   222 9138 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $00, $00	; "A" {uppercaseA-P} 1_2
   223 9140 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "K" {uppercaseA-P} 0_2
   224 9148 10 10 14 04 04 04 + 	.byte $10, $10, $14, $04, $04, $04, $00, $00	; "K" {uppercaseA-P} 1_2
   225 9150 00 00 14 14 24 24 + 	.byte $00, $00, $14, $14, $24, $24, $00, $00	; "." {special} 0_2
   226 9158 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "." {special} 1_2
   227 9160 24 24 90 90 40 40 + 	.byte $24, $24, $90, $90, $40, $40, $00, $00	; "[Atari left]" {special} 0_2
   228 9168 05 05 05 05 05 05 + 	.byte $05, $05, $05, $05, $05, $05, $00, $00	; "[Atari left]" {special} 1_2
   229 9170 80 80 80 80 80 80 + 	.byte $80, $80, $80, $80, $80, $80, $00, $00	; "[Atari right]" {special} 0_2
   230 9178 60 60 18 18 04 04 + 	.byte $60, $60, $18, $18, $04, $04, $00, $00	; "[Atari right]" {special} 1_2
   231 9180 60 60 60 60 6A 55 + 	.byte $60, $60, $60, $60, $6a, $55, $00, $00	; "B" {uppercaseA-P} 0_2
   232 9188 08 08 08 20 90 40 + 	.byte $08, $08, $08, $20, $90, $40, $00, $00	; "B" {uppercaseA-P} 1_2
   233 9190 62 69 54 54 50 50 + 	.byte $62, $69, $54, $54, $50, $50, $00, $00	; "W" {uppercaseQ-Z} 0_2
   234 9198 24 A4 54 54 14 14 + 	.byte $24, $a4, $54, $54, $14, $14, $00, $00	; "W" {uppercaseQ-Z} 1_2
   235 91A0 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "[heart left]" {special} 0_2
   236 91A8 60 60 18 18 06 01 + 	.byte $60, $60, $18, $18, $06, $01, $00, $00	; "[heart left]" {special} 1_2
   237 91B0 24 24 90 90 40 00 + 	.byte $24, $24, $90, $90, $40, $00, $00, $00	; "[heart right]" {special} 0_2
   238 91B8 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "[heart right]" {special} 1_2
   239 91C0 80 80 80 60 1A 05 + 	.byte $80, $80, $80, $60, $1a, $05, $00, $00	; "J" {uppercaseA-P} 0_2
   240 91C8 24 24 20 90 40 00 + 	.byte $24, $24, $20, $90, $40, $00, $00, $00	; "J" {uppercaseA-P} 1_2
   241 91D0 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "N" {uppercaseA-P} 0_2
   242 91D8 94 94 94 24 24 24 + 	.byte $94, $94, $94, $24, $24, $24, $00, $00	; "N" {uppercaseA-P} 1_2
   243 91E0 60 60 18 18 06 05 + 	.byte $60, $60, $18, $18, $06, $05, $00, $00	; "Q" {uppercaseQ-Z} 0_2
   244 91E8 64 64 90 90 44 44 + 	.byte $64, $64, $90, $90, $44, $44, $00, $00	; "Q" {uppercaseQ-Z} 1_2
   245 91F0 18 06 06 06 01 01 + 	.byte $18, $06, $06, $06, $01, $01, $00, $00	; "V" {uppercaseQ-Z} 0_2
   246 91F8 90 40 40 40 00 00 + 	.byte $90, $40, $40, $40, $00, $00, $00, $00	; "V" {uppercaseQ-Z} 1_2
   247 9200 60 60 60 60 60 60 + 	.byte $60, $60, $60, $60, $60, $60, $00, $00	; "X" {uppercaseQ-Z} 0_2
   248 9208 24 24 24 24 24 24 + 	.byte $24, $24, $24, $24, $24, $24, $00, $00	; "X" {uppercaseQ-Z} 1_2
   249 9210 90 90 60 60 6A 55 + 	.byte $90, $90, $60, $60, $6a, $55, $00, $00	; "Z" {uppercaseQ-Z} 0_2
   250 9218 00 00 00 00 A8 54 + 	.byte $00, $00, $00, $00, $a8, $54, $00, $00	; "Z" {uppercaseQ-Z} 1_2
   251 9220 06 06 18 18 20 20 + 	.byte $06, $06, $18, $18, $20, $20, $00, $00	; "," {special} 0_2
   252 9228 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "," {special} 1_2
   253 9230 00 00 14 14 24 24 + 	.byte $00, $00, $14, $14, $24, $24, $00, $00	; ":" {special} 0_2
   254 9238 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; ":" {special} 1_2
   255 9240 00 05 05 09 09 09 + 	.byte $00, $05, $05, $09, $09, $09, $00, $00	; "?" {special} 0_2
   256 9248 00 00 00 00 00 00 + 	.byte $00, $00, $00, $00, $00, $00, $00, $00	; "?" {special} 1_2
   257 9250			fonts2e
